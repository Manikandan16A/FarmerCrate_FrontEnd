import 'dart:convert';
import 'package:http/http.dart' as http;

class AdminOrderService {
  static const String baseUrl = 'https://farmercrate.onrender.com/api';

  static Future<Map<String, dynamic>> getActiveShipments(String token) async {
    try {
      final response = await http.get(
        Uri.parse('$baseUrl/orders/all'),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $token',
        },
      ).timeout(const Duration(seconds: 30));

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return {
          'success': true,
          'data': data['data'] ?? [],
        };
      } else {
        return {
          'success': false,
          'error': 'Failed to fetch active shipments (${response.statusCode})',
        };
      }
    } catch (e) {
      return {
        'success': false,
        'error': 'Network error: ${e.toString()}',
      };
    }
  }

  static Future<Map<String, dynamic>> trackOrder(String token, String orderId) async {
    try {
      // Try to get order details from the same endpoint that works
      final response = await http.get(
        Uri.parse('$baseUrl/orders/all'),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $token',
        },
      ).timeout(const Duration(seconds: 30));

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        final orders = data['data'] as List<dynamic>? ?? [];
        
        // Find the specific order
        final order = orders.firstWhere(
          (o) => o['order_id'].toString() == orderId,
          orElse: () => null,
        );
        
        if (order != null) {
          return {
            'success': true,
            'data': {
              'order': order,
              'tracking_steps': [], // Will be generated by the UI
            },
          };
        } else {
          return {
            'success': false,
            'error': 'Order not found',
          };
        }
      } else {
        return {
          'success': false,
          'error': 'Failed to track order (${response.statusCode})',
        };
      }
    } catch (e) {
      return {
        'success': false,
        'error': 'Network error: ${e.toString()}',
      };
    }
  }
}